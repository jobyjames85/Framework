<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fc="clr-namespace:Framework.devControls"
                    xmlns:fd="clr-namespace:Framework.Data;assembly=Framework.Data"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <!--******************** Constants ********************-->
    <Geometry x:Key="RightArrow">M0,0 L5,3.5 0,7 z</Geometry>
    <Geometry x:Key="DownArrow">M0,3 L7,3 3.5,7 z</Geometry>
    <Geometry x:Key="OverflowArrow">F1 M7,0 L4,3 7,6 M3,0 L0,3 3,6</Geometry>
    <!--******************** End Constants ********************-->


    <!--******************** Colors ********************-->

    <!--******************** End Colors ********************-->


    <!--******************** Brushes ********************-->
    <LinearGradientBrush x:Key="mouseOverBtnBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FFEAF6FD" Offset="0"/>
        <GradientStop Color="#FFD7EFFC" Offset="0.5"/>
        <GradientStop Color="#FFBDE6FD" Offset="0.5"/>
        <GradientStop Color="#FFA6D9F4" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="mousePressedBtnBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FFC2E4F6" Offset="0"/>
        <GradientStop Color="#FFC2E4F6" Offset="0.5"/>
        <GradientStop Color="#FFA9D9F2" Offset="0.5"/>
        <GradientStop Color="#FF90CBEB" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GradientBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="White" Offset="0" />
        <GradientStop Color="#FFCECECE" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#CCC" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#CCC" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#AAA" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#BBB" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="0.1"/>
                <GradientStop Color="#EEE" Offset="0.9"/>
                <GradientStop Color="#FFF" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#CCC" Offset="0.0"/>
                <GradientStop Color="#444" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#CCC" Offset="0.0"/>
                <GradientStop Color="#444" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#777" Offset="0.0"/>
                <GradientStop Color="#000" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#444" Offset="0.0"/>
                <GradientStop Color="#888" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="borderBrush" Color="#C0000000"/>

    <SolidColorBrush x:Key="borderShadowBrush" Color="#60000000"/>

    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />

    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />

    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />

    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

    <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />

    <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />

    <!-- Miscellaneous Brushes -->
    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

    <SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />
    <!--******************** End Brushes ********************-->


    <!--******************** Converters ********************-->
    <BooleanToVisibilityConverter x:Key="boolToVisible"/>
    <ImageSourceConverter x:Key="imgConverter"/>
    <JournalEntryUnifiedViewConverter x:Key="JournalEntryUnifiedViewConverter"/>
    <!--******************** End Converters ********************-->
    <!-- For Address Bar Controls Template-->
    <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="DropDownButtonTemplate">
        <fc:AeroChrome  SnapsToDevicePixels="True" Focusable="False" x:Name="chrome"
            BorderBrush="{StaticResource borderBrush}"
            BorderThickness="1"
            RenderMouseOver="{TemplateBinding IsMouseOver}" 
            RenderPressed="{TemplateBinding IsPressed}" >
            <fc:AeroChrome.Content>
                <Path x:Name="arrow" Data="{StaticResource DownArrow}" SnapsToDevicePixels="True" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="Black" Focusable="False"/>
            </fc:AeroChrome.Content>
        </fc:AeroChrome>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="chrome" Property="RenderMouseOver" Value="True"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type Button}" x:Key="ButtonTemplate">
        <Border Margin="-1,-1,0,-1" BorderBrush="{StaticResource borderBrush}" BorderThickness="1" Background="Transparent" SnapsToDevicePixels="True" Focusable="False">
            <fc:AeroChrome  SnapsToDevicePixels="True" x:Name="chrome" Focusable="False"
            BorderBrush="{StaticResource borderBrush}"
            BorderThickness="1"
             Margin="-1"
            RenderMouseOver="{TemplateBinding IsMouseOver}" 
            RenderPressed="{TemplateBinding IsPressed}" 
            Content="{TemplateBinding Content}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="chrome" Property="RenderMouseOver" Value="True"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type fc:BreadcrumbItem}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="BorderBrush" Value="{StaticResource borderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type fc:BreadcrumbItem}">
                    <Border Background="Transparent" Focusable="False"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <DockPanel>
                            <fc:BreadcrumbButton x:Name="PART_Header" 
                                                    DataContext="{Binding}"
                                                    IsImageVisible="{TemplateBinding IsRoot}"
                                                    IsButtonVisible="{TemplateBinding IsButtonVisible}"
                                                    ItemTemplate="{TemplateBinding OverflowItemTemplate}"
                                                    ItemTemplateSelector="{TemplateBinding OverflowItemTemplateSelector}"
                                                    IsDropDownPressed="{Binding IsDropDownPressed, RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                                    SelectedItem="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                                    Image ="{TemplateBinding Image}"
                                                    Header="{TemplateBinding Header}" ItemsSource="{Binding Items, RelativeSource={RelativeSource TemplatedParent}}">
                            </fc:BreadcrumbButton>
                            <ContentControl x:Name="PART_Selected"  Focusable="False" Content="{TemplateBinding SelectedBreadcrumb}" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsRoot" Value="True">
                            <Setter Property="EnableVisualButtonStyle" Value="False" TargetName="PART_Header"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="progressBarTemplate" TargetType="ProgressBar" 
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                     xmlns:s="clr-namespace:System;assembly=mscorlib">
        <Grid Name="Background" SnapsToDevicePixels="True">
            <Rectangle Name="PART_Track" Margin="1,1,1,1" />
            <Decorator Name="PART_Indicator" Margin="1,1,1,1" HorizontalAlignment="Left">
                <Grid Name="Foreground">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MaxWidth="15" />
                        <ColumnDefinition Width="0.1*" />
                        <ColumnDefinition MaxWidth="15" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Name="Indicator" Grid.ColumnSpan="3" Grid.RowSpan="2" />
                    <Rectangle Fill="{TemplateBinding TextElement.Foreground}" Name="Animation" OpacityMask="{x:Null}" Grid.ColumnSpan="3" Grid.RowSpan="2" />
                    <Rectangle Name="LeftDark" Margin="1,1,0,1" Grid.RowSpan="2">
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="#0C000000" Offset="0" />
                                    <GradientStop Color="#20000000" Offset="0.3" />
                                    <GradientStop Color="#00000000" Offset="1" />
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle RadiusX="1" RadiusY="1" Name="RightDark" Margin="0,1,1,1" Grid.Column="2" Grid.RowSpan="2">
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="#00000000" Offset="0" />
                                    <GradientStop Color="#20000000" Offset="0.7" />
                                    <GradientStop Color="#0C000000" Offset="1" />
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle Name="LeftLight" Grid.Column="0" Grid.Row="2">
                        <Rectangle.Fill>
                            <RadialGradientBrush RadiusX="1" RadiusY="1" RelativeTransform="1,0,0,1,0.5,0.5">
                                <RadialGradientBrush.GradientStops>
                                    <GradientStop Color="#60FFFFC4" Offset="0" />
                                    <GradientStop Color="#00FFFFC4" Offset="1" />
                                </RadialGradientBrush.GradientStops>
                            </RadialGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle Name="CenterLight" Grid.Column="1" Grid.Row="2">
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="#60FFFFC4" Offset="0" />
                                    <GradientStop Color="#00FFFFC4" Offset="1" />
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle Name="RightLight" Grid.Column="2" Grid.Row="2">
                        <Rectangle.Fill>
                            <RadialGradientBrush RadiusX="1" RadiusY="1" RelativeTransform="1,0,0,1,-0.5,0.5">
                                <RadialGradientBrush.GradientStops>
                                    <GradientStop Color="#60FFFFC4" Offset="0" />
                                    <GradientStop Color="#00FFFFC4" Offset="1" />
                                </RadialGradientBrush.GradientStops>
                            </RadialGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Border Name="Highlight1" Grid.ColumnSpan="3" Grid.RowSpan="2">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="#90FFFFFF" Offset="0.5385" />
                                    <GradientStop Color="#00FFFFFF" Offset="0.5385" />
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                    <Border Name="Highlight2" Grid.ColumnSpan="3" Grid.RowSpan="2">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="#80FFFFFF" Offset="0.05" />
                                    <GradientStop Color="#00FFFFFF" Offset="0.25" />
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Grid>
            </Decorator>
            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="MyFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="8">
                        <Ellipse
                    Name="r1"
                    Stroke="Black"
                    StrokeDashArray="2 2"
                    StrokeThickness="1"/>
                        <Border
                    Name="border"
                    Width="{TemplateBinding ActualWidth}"
                    Height="{TemplateBinding ActualHeight}"
                    BorderThickness="1"
                    CornerRadius="2"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="enForward">
        <Image Source="pack://application:,,,/Framework.devControls;Component/Images/EnableForward.png" Height="32" Width="32" Margin="2,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Fill"/>
    </DataTemplate>

    <DataTemplate x:Key="disForward">
        <Image Source="pack://application:,,,/Framework.devControls;Component/Images/ForwardDisable.png" Height="32" Width="32" Margin="2,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Fill"/>
    </DataTemplate>

    <DataTemplate x:Key="enBackward">
        <Image Source="pack://application:,,,/Framework.devControls;Component/Images/backSpecial4.png" Height="20" Margin="2,0,1,0" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Fill"/>
    </DataTemplate>

    <DataTemplate x:Key="disBackward">
        <Image Source="pack://application:,,,/Framework.devControls;Component/Images/disbackSpecial4.png" Height="20" Margin="2,0,1,0" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Fill"/>
    </DataTemplate>

    <DataTemplate x:Key="BlueRefresh">
        <Image Source="pack://application:,,,/Framework.devControls;Component/Images/BlueRefresh.png"  Margin="3" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Fill"/>
    </DataTemplate>

    <DataTemplate x:Key="GrayRefresh">
        <Image Source="pack://application:,,,/Framework.devControls;Component/Images/GrayRefresh.png"  Margin="3" VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Fill"/>
    </DataTemplate>

    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}" x:Key="refreshButton">
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter  Property="ContentTemplate" Value="{StaticResource BlueRefresh}">
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter  Property="ContentTemplate" Value="{StaticResource GrayRefresh}">
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}" x:Key="forwardButton">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisual}"/>
        <!--<Setter Property="Background" Value="#FF6DB4EF"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Ellipse Margin="10" x:Name="highlightCircle" >
                            <Ellipse.Fill >
                                <LinearGradientBrush >
                                    <GradientStop Offset="0" Color="#50FFFFFF"/>
                                    <GradientStop Offset="0.5" Color="#00FFFFFF"/>
                                    <GradientStop Offset="1" Color="#50FFFFFF"/>
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="highlightCircle" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.3,0" EndPoint="0.7,1">
                                        <GradientStop Offset="0" Color="#50FFFFFF"/>
                                        <GradientStop Offset="0.5" Color="#00FFFFFF"/>
                                        <GradientStop Offset="1" Color="#50FFFFFF"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="content" Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform Y="0.5" X="0.5"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="ContentTemplate" Value="{StaticResource disForward}">
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="ContentTemplate" Value="{StaticResource enForward}">
                </Setter>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter  Property="BitmapEffect">
                    <Setter.Value>
                        <DropShadowBitmapEffect ShadowDepth="1" Color="#ffe4e5e7" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}" x:Key="backwardButton">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="ContentTemplate" Value="{StaticResource enBackward}">
                </Setter>
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="ContentTemplate" Value="{StaticResource disBackward}">
                </Setter>
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter  Property="BitmapEffect">
                    <Setter.Value>
                        <DropShadowBitmapEffect ShadowDepth="1" Color="#ffe4e5e7" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FrameHeaderMenuItem" TargetType="MenuItem">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Grid>
                        <Popup x:Name="PART_Popup"
            Placement="Bottom"
            VerticalOffset="2"
            IsOpen="{TemplateBinding IsSubmenuOpen}"
            AllowsTransparency="True" 
            Focusable="False"
            PopupAnimation="Fade">
                            <Border Name="SubMenuBorder"
              Background="{StaticResource WindowBackgroundBrush}"
              BorderThickness="1"
              BorderBrush="{StaticResource SolidBorderBrush}">
                                <StackPanel IsItemsHost="true"
                Margin="2"
                KeyboardNavigation.TabNavigation="Cycle"
                KeyboardNavigation.DirectionalNavigation="Cycle"/>
                            </Border>
                        </Popup>
                        <Grid x:Name="Panel" 
            Width="24" 
            Background="Transparent"
            HorizontalAlignment="Right" >
                            <Border Visibility="Hidden" 
              Name="HighlightBorder" 
              BorderThickness="1" 
              BorderBrush="{StaticResource NormalBorderBrush}" 
              Background="{StaticResource NormalBrush}" 
              CornerRadius="2" />
                            <Path x:Name="Arrow"
              SnapsToDevicePixels="false"
              HorizontalAlignment="Right"
              VerticalAlignment="Center"
              Margin="0,2,4,0"
              Fill="{StaticResource GlyphBrush}"
              StrokeLineJoin="Round"
              Data="M 0 0 L 4 4 L 8 0 Z"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="HighlightBorder"
                    Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="IsSubmenuOpen" Value="true">
                            <Setter TargetName="HighlightBorder"
                    Property="Background" Value="{StaticResource PressedBrush}" />
                            <Setter TargetName="HighlightBorder"
                    Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Arrow"
                    Property="Fill"  Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Frame Menu Item Style -->
    <Style x:Key="FrameMenu" TargetType="Menu">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="IsMainMenu" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Menu">
                    <DockPanel IsItemsHost="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FrameSubmenuItem" TargetType="MenuItem">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Header" Value="{Binding Path=(JournalEntry.Name)}"/>
        <Setter Property="Command" Value="fd:NavigationCommandsEx.NavigateJournal"/>
        <Setter Property="CommandTarget"
          Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Menu}},
                          Path=TemplatedParent.TargetFrame}"/>
        <Setter Property="CommandParameter"
          Value="{Binding RelativeSource={RelativeSource Self}}"/>
        <Setter Property="JournalEntryUnifiedViewConverter.JournalEntryPosition"
          Value="{Binding (JournalEntryUnifiedViewConverter.JournalEntryPosition)}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Grid Name="Panel"
          Background="Transparent"
          SnapsToDevicePixels="true">
                        <Path Name="Glyph"
            SnapsToDevicePixels="false"
            Margin="7,5"
            Width="10"
            Height="10"
            HorizontalAlignment="Left"
            StrokeStartLineCap="Triangle"
            StrokeEndLineCap="Triangle"
            StrokeThickness="2"
            Stroke="{StaticResource GlyphBrush}" />

                        <ContentPresenter ContentSource="Header"
            Margin="24,5,50,5"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="JournalEntryUnifiedViewConverter.JournalEntryPosition"
                   Value="Current">
                            <Setter TargetName="Glyph"
                    Property="Data" Value="M 0,5 L 2.5,8 L 7,3 "/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Panel" Property="Background"
                    Value="{StaticResource SelectedBackgroundBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="MenuItem.IsHighlighted" Value="true"/>
                                <Condition Property="JournalEntryUnifiedViewConverter.JournalEntryPosition"
                         Value="Forward"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Glyph" Property="Data" Value="M 3 1 L 7 5 L 3 9 z"/>
                            <Setter TargetName="Glyph" Property="Fill" Value="{StaticResource GlyphBrush}"/>
                            <Setter TargetName="Glyph" Property="Stroke" Value="{x:Null}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="MenuItem.IsHighlighted" Value="true"/>
                                <Condition Property="JournalEntryUnifiedViewConverter.JournalEntryPosition"
                         Value="Back"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Glyph" Property="Data" Value="M 7 1 L 3 5 L 7 9 z"/>
                            <Setter TargetName="Glyph" Property="Fill" Value="{StaticResource GlyphBrush}"/>
                            <Setter TargetName="Glyph" Property="Stroke" Value="{x:Null}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--BreadcrumbBar-->
    <Style TargetType="{x:Type fc:BreadcrumbBar}">
        <Setter Property="MinHeight" Value="23"/>
        <Setter Property="Background" Value="#72FFFFFF"/>
        <Setter Property="BorderBrush" Value="{StaticResource borderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type fc:BreadcrumbBar}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>
                            <Setter Property="MinWidth" Value="21"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                            <Setter Property="BorderBrush" Value="Black"/>
                            <Setter Property="Focusable" Value="{Binding Focusable, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type fc:BreadcrumbBar}}}"/>
                        </Style>
                        <Style TargetType="{x:Type fc:BreadcrumbButton}">
                            <Setter Property="Focusable" Value="{Binding Focusable, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type fc:BreadcrumbBar}}}"/>
                        </Style>

                    </ControlTemplate.Resources>

                    <Grid >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>

                            <ColumnDefinition Width="Auto"/>

                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>


                        <Menu Name="NavMenu"  VerticalAlignment="Center" BorderBrush="Transparent"  Style="{StaticResource FrameMenu}">
                            <MenuItem Style="{StaticResource FrameHeaderMenuItem}" Name="contextmenu" ItemContainerStyle="{StaticResource FrameSubmenuItem}" >
                                <MenuItem.ItemsSource>
                                    <MultiBinding Converter="{StaticResource JournalEntryUnifiedViewConverter}">
                                        <MultiBinding.Bindings>
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="TargetFrame.BackStack" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="TargetFrame.ForwardStack" />
                                        </MultiBinding.Bindings>
                                    </MultiBinding>
                                </MenuItem.ItemsSource>
                            </MenuItem>
                        </Menu>
                        <!--<Button x:Name="btnForward" Command="BrowseForward" Style="{StaticResource b}" Grid.Column="1" Margin="-8,0,8,0" ContextMenuService.Placement="Bottom"
                                    CommandTarget="{TemplateBinding TargetFrame}" Height="22" Width="27" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,1,0"
                                   >
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="Button.ContextMenuOpening">

                                    <BeginStoryboard>
                                        <Storyboard>

                                            <BooleanAnimationUsingKeyFrames  Storyboard.TargetName="contextmenu"
                                                                                Storyboard.TargetProperty="IsSubmenuOpen"  >
                                                <DiscreteBooleanKeyFrame  Value="True"/>
                                            </BooleanAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>


                            </Button.Triggers>

                        </Button>-->
                        <Border Background="{TemplateBinding Background}" CornerRadius="0,3,3,0" SnapsToDevicePixels="True" Margin="-9,0,10,0" Grid.Column="3" Height="24"
                            BorderBrush="#FFc9d3de" 
                            Focusable="False"
                            BorderThickness="0,1,1,1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Image x:Name="image" Margin="2,0,0,0" Grid.Column="0" Source="pack://application:,,,/Framework.devControls;Component/Images/addressbarImage.png"
                                       Width="16" Height="16" Stretch="Fill" />
                                <Border BorderBrush="White" CornerRadius="3" Grid.Column="1" BorderThickness="0" 
                                        Focusable="False" SnapsToDevicePixels="True">
                                    <Grid Margin="-1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="25"/>
                                        </Grid.ColumnDefinitions>
                                        <ProgressBar x:Name="progress" Grid.Column="0" Grid.ColumnSpan="4" 
                                             Maximum="{Binding ProgressMaximum,RelativeSource={RelativeSource TemplatedParent}}" 
                                             Minimum="{Binding ProgressMinimum,RelativeSource={RelativeSource TemplatedParent}}" 
                                             Value="{Binding ProgressValue,RelativeSource={RelativeSource TemplatedParent}}" 
                                             Background="Transparent"
                                             BorderThickness="0"
                                             Template="{StaticResource progressBarTemplate}"/>
                                        <fc:BreadcrumbButton  ItemsSource="{TemplateBinding CollapsedTraces}"  Grid.Column="0"
                                                         x:Name="PART_Root" IsTabStop="False"
                                                         EnableVisualButtonStyle="False"
                                                         Mode="{TemplateBinding OverflowMode}"
                                                        SelectedItem="{Binding SelectedItem,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                                        ItemTemplate="{TemplateBinding OverflowItemTemplate}"
                                                         IsImageVisible="True"
                                                         Image="{Binding SelectedBreadcrumb.Image, RelativeSource={RelativeSource TemplatedParent}}"
                                                        ItemTemplateSelector="{TemplateBinding OverflowItemTemplateSelector}"
                                                        IsDropDownPressed="{Binding IsOverflowPressed,RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" >
                                        </fc:BreadcrumbButton>
                                        <ContentPresenter x:Name="container" Grid.Column="1" Content="{Binding RootItem,RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <ToggleButton x:Name="dropDown" Grid.Column="2" IsTabStop="False"
                                              Focusable="False"
                                              Width="16"
                                              Visibility="Collapsed"
                                              FocusVisualStyle="{x:Null}"
                                              Template="{StaticResource DropDownButtonTemplate}" 
                                    ClickMode="Press"
                                              IsChecked="{Binding IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                              Margin="-1"
                                              BorderThickness="1"  
                                              BorderBrush="{StaticResource borderBrush}" />
                                        <ComboBox x:Name="PART_ComboBox" IsTabStop="False"                                         
                                          Visibility="Hidden"
                                          Margin="0,0,0,0"
                                          IsEditable="True"
                                          Focusable="True"
                                          ItemTemplate="{TemplateBinding DropDownItemTemplate}"
                                          ItemTemplateSelector="{TemplateBinding DropDownItemTemplateSelector}"
                                          ItemsSource="{Binding DropDownItems,RelativeSource={RelativeSource TemplatedParent}}"
                                          BorderThickness="0"
                                          Grid.Column="0"
                                          SelectedIndex="{Binding SelectedDropDownIndex,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                                          Grid.ColumnSpan="3"/>
                                        <ItemsControl  x:Name="buttons"  Grid.Column="3" Margin="1,0,-1,0" ItemsSource="{Binding Buttons,RelativeSource={RelativeSource TemplatedParent} }"  Focusable="False"  >
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel Orientation="Horizontal" IsItemsHost="True"/>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>
                                        <Button x:Name="Refresh1" IsTabStop="False" HorizontalAlignment="Right" Grid.Column="4" Height="18" Width="18" Style="{StaticResource refreshButton}"
                                                Command="{x:Static fd:NavigationCommandsEx.Refresh}">
                                            <Button.ToolTip>
                                                <fc:LocalizeItemSelector>
                                                    <fc:LocalizeItem IetfLanguageTag="en" Text="Refresh (F5)"/>
                                                    <fc:LocalizeItem IetfLanguageTag="ja" Text="リフレッシュ (F5)"/>
                                                    <fc:LocalizeItem IetfLanguageTag="zh" Text="刷新 (F5)"/>
                                                    <fc:LocalizeItem IetfLanguageTag="th" Text="รีเฟรช (F5)"/>
                                                </fc:LocalizeItemSelector>
                                            </Button.ToolTip>
                                        </Button>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                        <!--Changes this is the main changes-->
                        <Border Grid.Column="1" Margin="-8,0,8,0" Height="24" Width="27" BorderBrush="#FFc9d3de" Name="forwardBorder" BorderThickness="0,1,1,1">
                            <Button x:Name="btnForward" Command="fd:NavigationCommandsEx.BrowseForward" Style="{StaticResource backwardButton}"  ContextMenuService.Placement="Bottom"
                                    CommandTarget="{TemplateBinding TargetFrame}">
                                <Button.Triggers>
                                    <EventTrigger RoutedEvent="Button.ContextMenuOpening">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <BooleanAnimationUsingKeyFrames  Storyboard.TargetName="contextmenu"
                                                                                Storyboard.TargetProperty="IsSubmenuOpen"  >
                                                    <DiscreteBooleanKeyFrame  Value="True"/>
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Button.Triggers>
                            </Button>
                        </Border>
                        <Button x:Name="btnBack" Style="{StaticResource forwardButton}" Command="fd:NavigationCommandsEx.BrowseBack" Grid.Column="0" CommandTarget="{TemplateBinding TargetFrame}" Height="35" Width="35" ContextMenuService.Placement="Bottom">
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="Button.ContextMenuOpening">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <BooleanAnimationUsingKeyFrames  Storyboard.TargetName="contextmenu"
                                                                                Storyboard.TargetProperty="IsSubmenuOpen"  >
                                                <DiscreteBooleanKeyFrame  Value="True"/>
                                            </BooleanAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Button.Triggers>
                        </Button>
                    </Grid>



                    <ControlTemplate.Triggers>
                        <Trigger Property="Visibility" Value="Visible" SourceName="PART_ComboBox">
                            <!--hide the breadcrumb container and root button  if the combobox is visible, otherwise a breadcrumb button could get the focus on mouseover: -->
                            <Setter Property="Visibility" Value="Hidden" TargetName="container"/>
                            <Setter Property="Visibility" Value="Hidden" TargetName="PART_Root"/>
                        </Trigger>
                        <Trigger Property="IsRootSelected" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Root"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.3" To="White" Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.3" From="White" Storyboard.TargetProperty="Background.Color"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="HasDropDownItems" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="dropDown"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--BreadcrumbButton-->
    <Style TargetType="{x:Type fc:BreadcrumbButton}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="{StaticResource mouseOverBtnBrush}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type fc:BreadcrumbButton}">
                    <Grid Margin="{TemplateBinding Padding}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <fc:AeroChrome Grid.Column="0"
                                          Visibility="Visible"
                                          x:Name="button"
                                          Focusable="False"
                                          Margin="-1"                                         
                                          BorderThickness="1"       
                                           RenderPressed="{TemplateBinding IsPressed}"
                                          RenderMouseOver="{TemplateBinding IsMouseOver}">
                            <fc:AeroChrome.Content>
                                <StackPanel Orientation="Horizontal">
                                    <!--<Border>
                                    <Image x:Name="image"   Source="{Binding Image, RelativeSource={RelativeSource TemplatedParent}}" Width="16" Height="16" Stretch="Fill" />
                                    </Border>-->
                                    <ContentPresenter Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" Margin="2,0,2,0"/>
                                </StackPanel>
                            </fc:AeroChrome.Content>
                        </fc:AeroChrome>

                        <!--Content="{TemplateBinding Header}"/>-->
                        <fc:AeroChrome Grid.Column="1" x:Name="PART_DropDown"
                                          Focusable="False"
                                          MinWidth="16"
                                          Margin="-1"
                                          BorderThickness="1"
                                           RenderPressed="{TemplateBinding IsDropDownPressed}"
                                          RenderMouseOver="{TemplateBinding IsMouseOver}"
                                          ContentTemplate="{TemplateBinding DropDownContentTemplate}" 
                                          >
                            <fc:AeroChrome.Content>
                                <Path x:Name="dropDownPath" Fill="Black" Data="{StaticResource RightArrow}" SnapsToDevicePixels="True"  HorizontalAlignment="Center"/>
                            </fc:AeroChrome.Content>
                            <fc:AeroChrome.ContextMenu>
                                <ContextMenu x:Name="PART_Menu"                                                
                                              IsTextSearchEnabled="True"
                                                 HorizontalOffset="-14"
                                               ItemContainerStyle="{x:Null}"
                                                 IsOpen="{Binding IsDropDownPressed, RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}">
                                    <ContextMenu.Template>
                                        <ControlTemplate TargetType="ContextMenu" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
                                            <mwt:SystemDropShadowChrome Color="#00FFFFFF" Name="Shdw" SnapsToDevicePixels="True" MaxHeight="400">
                                                <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}">
                                                    <Grid>
                                                        <Rectangle RadiusX="2" RadiusY="2" Fill="#FFF1F1F1" Width="22" Margin="2,2,2,2" HorizontalAlignment="Left" />
                                                        <Rectangle Fill="#FFE2E3E3" Width="1" Margin="25,2,0,2" HorizontalAlignment="Left" />
                                                        <Rectangle Fill="#FFFFFFFF" Width="1" Margin="26,2,0,2" HorizontalAlignment="Left" />
                                                        <ScrollViewer CanContentScroll="True" Margin="1,0,1,0" Grid.ColumnSpan="2" VerticalScrollBarVisibility="Auto" >
                                                            <ItemsPresenter Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                                        </ScrollViewer>
                                                    </Grid>
                                                </Border>
                                            </mwt:SystemDropShadowChrome>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="ContextMenuService.HasDropShadow">
                                                    <Setter Property="FrameworkElement.Margin" TargetName="Shdw">
                                                        <Setter.Value>
                                                            <Thickness>0,0,5,5</Thickness>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="mwt:SystemDropShadowChrome.Color" TargetName="Shdw">
                                                        <Setter.Value>
                                                            <Color>#71000000</Color>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Trigger.Value>
                                                        <s:Boolean>True</s:Boolean>
                                                    </Trigger.Value>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ContextMenu.Template>
                                </ContextMenu>
                            </fc:AeroChrome.ContextMenu>
                        </fc:AeroChrome>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsImageVisible" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="image"/>
                        </Trigger>-->
                        <!--<Trigger Property="Image" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="image"/>
                        </Trigger>-->
                        <Trigger Property="EnableVisualButtonStyle" Value="False">
                            <Setter TargetName="button" Property="MouseOverBackground" Value="Transparent"/>
                            <Setter TargetName="button" Property="MousePressedBackground" Value="Transparent"/>
                            <Setter TargetName="button" Property="BorderBrush" Value="Transparent"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Header" Value="{x:Null}"/>
                                <Condition Property="IsImageVisible" Value="False"/>
                                <Condition Property="Image" Value="{x:Null}"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="button"/>
                        </MultiTrigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_DropDown"/>
                        </Trigger>
                        <Trigger Property="Mode" Value="Overflow">
                            <Setter Property="Data" Value="{StaticResource OverflowArrow}" TargetName="dropDownPath"/>
                            <Setter Property="Fill" Value="Transparent" TargetName="dropDownPath"/>
                            <Setter Property="Stroke" Value="Black" TargetName="dropDownPath"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="RenderPressed" Value="True" TargetName="PART_DropDown"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="RenderMouseOver" Value="True" TargetName="PART_DropDown"/>
                            <Setter Property="RenderMouseOver" Value="True" TargetName="button"/>
                        </Trigger>
                        <Trigger Property="IsDropDownVisible" Value="False">
                            <Setter TargetName="PART_DropDown" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" SourceName="PART_DropDown"/>
                                <Condition Property="EnableVisualButtonStyle" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="MouseOverBackground" Value="{StaticResource GradientBorderBrush}" TargetName="button"/>
                        </MultiTrigger>
                        <Trigger Property="IsButtonVisible" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="button"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsDropDownPressed" Value="True"/>
                                <Condition Property="Mode" Value="Breadcrumb"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Data" Value="{StaticResource DownArrow}" TargetName="dropDownPath"/>
                            <Setter Property="RenderPressed" Value="True" TargetName="button"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type fc:AeroChrome}">
        <Setter Property="MouseOverBackground" Value="{StaticResource mouseOverBtnBrush}"/>
        <Setter Property="MousePressedBackground" Value="{StaticResource mousePressedBtnBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource borderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type fc:AeroChrome}">
                    <Grid Margin="{TemplateBinding Padding}">
                        <Border x:Name="mouseOverBtn"
                                    Opacity="0"
                                    Background="{TemplateBinding MouseOverBackground}"
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    SnapsToDevicePixels="True">
                            <Border x:Name="innerButton" SnapsToDevicePixels="True"
                                        BorderThickness="1"
                                        BorderBrush="White"/>
                        </Border>
                        <Border x:Name="mouseDownBtn" 
                                    Opacity="0"
                                    Background="{TemplateBinding MousePressedBackground}"
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    SnapsToDevicePixels="True">
                            <Border x:Name="innerButton2" SnapsToDevicePixels="False"
                                        BorderThickness="1.2,1.2,0,0"
                                        BorderBrush="{StaticResource borderShadowBrush}"/>
                        </Border>
                        <ContentPresenter Content="{TemplateBinding Content}" 
                                          x:Name="content"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          Margin="6,2,4,2"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="RenderMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard >
                                        <DoubleAnimation Storyboard.TargetName="mouseOverBtn" Storyboard.TargetProperty="Opacity" Duration="0:0:0.25" To="1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard >
                                        <DoubleAnimation Storyboard.TargetName="mouseOverBtn" Storyboard.TargetProperty="Opacity" Duration="0:0:0.25" To="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="RenderPressed" Value="True">
                            <Setter Property="Opacity" TargetName="mouseDownBtn" Value="1"/>
                            <Setter Property="Margin" TargetName="content" Value="5,3,3,1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--End Address Bar Controls Template-->
</ResourceDictionary>