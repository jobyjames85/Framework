<Window x:Class="Framework.devControls.CustomControl.PopupMessageBox"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        MaxWidth="600" AllowsTransparency="True"
        FontFamily="pack://application:,,,/V-Parcel;component/Resources/Fonts/#Roboto-Thin"
        Background="Transparent" Closing="MessageBoxWindow_Closing"
        Loaded="Window_Loaded" RenderTransformOrigin="0.5, 0.5"
        ResizeMode="NoResize" ShowInTaskbar="False" SizeToContent="WidthAndHeight" 
        WindowStartupLocation="CenterOwner" WindowStyle="None" x:Name="MessageBoxWindow"
        Title="PopupMessageBox">
    <Window.RenderTransform>
        <ScaleTransform x:Name="Scale"/>
    </Window.RenderTransform>
    <Window.Resources>

        <!-- Brushes -->
        <LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#E4E9F0"/>
            <GradientStop Offset="1" Color="#D5DDED"/>
        </LinearGradientBrush>
        <!-- Styles -->
        <Style TargetType="Label">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="12pt"/>
            <Setter Property="Foreground" Value="#FF003399"/>
        </Style>
        <Style TargetType="Image">
            <Setter Property="Height" Value="32"/>
            <Setter Property="Width" Value="32"/>
            <Setter Property="Margin" Value="3"/>
        </Style>
        <!-- Animation -->
        <Storyboard x:Key="LoadAnimation">
            <DoubleAnimation AccelerationRatio="0.4" Duration="00:00:00.15" From="0.6" Storyboard.TargetName="Scale" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="1.1"/>
            <DoubleAnimation AccelerationRatio="0.4" Duration="00:00:00.15" From="0.6" Storyboard.TargetName="Scale" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1.1"/>
            <DoubleAnimation AccelerationRatio="0.4" Duration="00:00:00.15" From="0" Storyboard.TargetName="MessageBoxWindow" Storyboard.TargetProperty="(Window.Opacity)" To="1"/>
            <DoubleAnimation BeginTime="00:00:00.15" Duration="00:00:00.1" From="1.1" Storyboard.TargetName="Scale" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="1"/>
            <DoubleAnimation BeginTime="00:00:00.15" Duration="00:00:00.1" From="1.1" Storyboard.TargetName="Scale" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1"/>
        </Storyboard>

        <Storyboard x:Key="UnloadAnimation">
            <DoubleAnimation AccelerationRatio="0.4" Duration="00:00:00.2" From="1" Storyboard.TargetName="Scale"  Storyboard.TargetProperty="(ScaleTransform.ScaleX)" To="0.6"/>
            <DoubleAnimation AccelerationRatio="0.4" Duration="00:00:00.2" From="1" Storyboard.TargetName="Scale" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="0.6"/>
            <DoubleAnimation AccelerationRatio="0.4" Duration="00:00:00.2" From="1" Storyboard.TargetName="MessageBoxWindow" Storyboard.TargetProperty="(Window.Opacity)" To="0"/>
        </Storyboard>
        <!--="124" Height="42" FontSize="15"-->
        <Style  TargetType="{x:Type Button}">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Width" Value="124"/>
            <Setter Property="Height" Value="42"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Image x:Name="CancelButton" Source="pack://application:,,,/V-Parcel;component/Resources/Images/pop_up_btn.png" />
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Source" TargetName="CancelButton" Value="pack://application:,,,/V-Parcel;component/Resources/Images/pop_up_btn.png"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Source" TargetName="CancelButton" Value="pack://application:,,,/V-Parcel;component/Resources/Images/pop_up_btn.png"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Border Margin="0" Height="150" Width="550"  Padding="7">
        <Border.Background>
            <ImageBrush ImageSource="pack://application:,,,/V-Parcel;component/Resources/Images/pop_up.png"/>
        </Border.Background>
        <DockPanel LastChildFill="True">
            <StackPanel x:Name="ButtonsPanel" HorizontalAlignment="Center" DockPanel.Dock="Bottom" Orientation="Horizontal"/>
            <Image x:Name="ImagePlaceholder" DockPanel.Dock="Left"/>
            <Label x:Name="MessageLabel" DockPanel.Dock="Right" HorizontalAlignment="Center">
                <TextBlock x:Name="MessageText" TextAlignment="Center" TextWrapping="Wrap" HorizontalAlignment="Center" Foreground="White"/>
            </Label>
        </DockPanel>
    </Border>
</Window>

