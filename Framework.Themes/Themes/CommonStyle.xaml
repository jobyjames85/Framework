<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="MainBorderStyle_Minimize" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="3" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="20" />
    </Style>

    <Style x:Key="ButtonBackgroundStyle_Minimize" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="3" />
    </Style>

    <Style x:Key="OpacityBorderStyle_Minimize" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="3" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0,-1,0,0" />
    </Style>

    <Style x:Key="BottomBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="Margin" Value="0,0,0,-3" />
        <Setter Property="Height" Value="9" />
        <Setter Property="Width" Value="21" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
    </Style>

    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="ButtonBackgroundMouseOverBrush_Minimize_Maximize">
        <GradientStop Color="#FFABD3EB" Offset="0" />
        <GradientStop Color="#FF2073AA" Offset="0.467" />
        <GradientStop Color="#FF2073AA" Offset="1" />
        <GradientStop Color="#FFA8D1E9" Offset="0.353" />
    </LinearGradientBrush>

    <RadialGradientBrush x:Key="BottomBorderBackgroundMouseOverBrush_Minimize_Maximize">
        <GradientStop Color="#E509EDEB" Offset="0" />
        <GradientStop Color="#1909EDEB" Offset="1" />
    </RadialGradientBrush>

    <DropShadowEffect x:Key="ButtonEffectStyle_Minimize_Maximize" Color="#FF0BFEFB" ShadowDepth="0" BlurRadius="15" RenderingBias="Performance"></DropShadowEffect>

    <Style x:Key="MainBorderStyle_Maximize" TargetType="{x:Type Border}">
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="20" />
        <Setter Property="CornerRadius" Value="3" />
    </Style>

    <Style x:Key="ButtonBackgroundStyle_Maximize" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="3" />
    </Style>

    <Style x:Key="OpacityBorderStyle_Maximize" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style x:Key="MainBorderStyle_Close" TargetType="{x:Type Border}">
        <Setter Property="Width" Value="35" />
        <Setter Property="Height" Value="20" />
        <Setter Property="CornerRadius" Value="3" />
    </Style>

    <Style x:Key="ButtonBackgroundStyle_Close" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="3" />
    </Style>

    <Style x:Key="BottomBorderStyle_Close" TargetType="{x:Type Border}">
        <Setter Property="Height" Value="1" />

        <Setter Property="CornerRadius" Value="20" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
    </Style>

    <Style x:Key="OpacityBorderStyle_Close" TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="0,-1,0,0" />
        <Setter Property="CornerRadius" Value="3" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="ButtonBackgroundMouseOverBrush_Close">
        <LinearGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterY="0.5" CenterX="0.5" />
                <SkewTransform CenterY="0.5" CenterX="0.5" />
                <RotateTransform Angle="90" CenterY="0.5" CenterX="0.5" />
                <TranslateTransform />
            </TransformGroup>
        </LinearGradientBrush.RelativeTransform>
        <GradientStop Color="#FFAD1C05" Offset="0" />
        <GradientStop Color="#FFAD1C05" Offset="1" />
        <GradientStop Color="#FFFF2B04" Offset="0.488" />
        <GradientStop Color="#FFD02202" Offset="0.283" />
        <GradientStop Color="#FFD02202" Offset="0.67" />
    </LinearGradientBrush>

    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="OpacityBorderMouseOverBrush_Close">
        <GradientStop Color="#59FFFFFF" Offset="0" />
        <GradientStop Color="#7FF8FBBB" Offset="1" />
        <GradientStop Offset="0.468" Color="Transparent" />
        <GradientStop Color="#59FFFFFF" Offset="0.455" />
        <GradientStop Color="#0BFEFEFA" Offset="0.825" />
        <GradientStop Color="#00FEFEFA" Offset="0.731" />
    </LinearGradientBrush>

    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="BottomBorderBackgroundMouseOverBrush_Close">
        <GradientStop Color="#FFF5E677" Offset="0" />
        <GradientStop Color="#FFF5E677" Offset="1" />
    </LinearGradientBrush>

        <!--******************** Constants ********************-->
        <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
        <!--******************** End Constants ********************-->

        <!--******************** Colors ********************-->

        <!--******************** End Colors********************-->

        <!--******************** Brushes ********************-->
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        <SolidColorBrush x:Key="ListBorder" Color="#828790"/>
        <!--******************** End Brushes ********************-->

        <!--******************** Converters ********************-->

        <!--******************** End Converters ********************-->

        <!--******************** Objects or Commands etc ********************-->

        <!--******************** Finish Objects or Commands etc ********************-->

        <!--******************** Style and Template ********************-->
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
                            <Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="Transparent" Stroke="#FF989898">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--<Style  TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="Foreground" Value="{DynamicResource ForgroundForTreeViewItem}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="10" Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Border x:Name="Bd"  Grid.ColumnSpan="3" CornerRadius="2"  SnapsToDevicePixels="true" Background="{TemplateBinding Background}"
                                              BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="1" Padding="{TemplateBinding Padding}">
                                <Grid HorizontalAlignment="Left">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="19" Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton x:Name="Expander" Style="{DynamicResource ExpandCollapseToggleStyle}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ClickMode="Press"/>
                                    <TextBlock Grid.Column="1" Margin="0,-1,0,-2" Name="underline" Foreground="{DynamicResource ForgroundForAreaPageTreeViewItem}">
                                <ContentPresenter  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  x:Name="PART_Header" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header"/>
                                    </TextBlock>

                                    <Rectangle Grid.Column="1" x:Name="FocusElement"></Rectangle>
                                </Grid>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Margin="0" Grid.ColumnSpan="3" Grid.Row="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true" SourceName="PART_Header">
                            
                            
                                <Setter TargetName="underline" Property="TextDecorations" Value="Underline"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                            
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter TargetName="FocusElement" Property="Stroke" Value="Gray"/>
                                <Setter TargetName="FocusElement" Property="StrokeDashArray" Value="2 2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

        <Style  TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="Foreground" Value="{DynamicResource ForgroundForTreeViewItem}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="10" Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Border x:Name="Bd"  Grid.ColumnSpan="3" CornerRadius="2"  SnapsToDevicePixels="true" Background="{TemplateBinding Background}"
                                              BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="1" Padding="{TemplateBinding Padding}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="19" Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton x:Name="Expander" Style="{DynamicResource ExpandCollapseToggleStyle}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ClickMode="Press"/>
                                    <ContentPresenter Grid.Column="1" Margin="0,-1,0,-2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  x:Name="PART_Header" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header"/>
                                </Grid>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Margin="0" Grid.ColumnSpan="3" Grid.Row="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true" SourceName="PART_Header">
                                <Setter Property="Background" TargetName="Bd"  Value="{DynamicResource BackGroundForMouseOver}" />
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource BorderForMouseOver}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource BackGroundForSelected}"/>
                                <Setter Property="BorderBrush"  TargetName="Bd" Value="{DynamicResource BorderForSelected}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style  TargetType="{x:Type TreeView}">
            <Setter Property="Language" Value="{Binding Path=Language, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentPresenter}}"/>
            <Setter Property="Background" Value="{DynamicResource BackgroundForTreeView}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeView}">
                        <Border x:Name="Bd"  BorderBrush="Transparent"  BorderThickness="0" SnapsToDevicePixels="True"  Margin="-4,-4,0,-4" >
                            <ScrollViewer x:Name="_tv_scrollviewer_" Background="{TemplateBinding Background}" CanContentScroll="false" Focusable="false" 
                                      HorizontalScrollBarVisibility="Disabled" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                                <Setter Property="CanContentScroll" TargetName="_tv_scrollviewer_" Value="true"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--******************** Finish Style and Templates ********************-->

</ResourceDictionary>